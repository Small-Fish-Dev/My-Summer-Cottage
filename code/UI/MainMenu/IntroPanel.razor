@namespace Sauna.UI
@attribute [StyleSheet]
@inherits PanelComponent

<root>
	<div class="disclaimer-container @(_state != IntroState.Disclaimer ? "hidden" : "")">
		<div class="header">
			<h1>WARNING</h1>
			<div class="text">This game contains topics that are not suitable for the players under 18.</div>
		</div>

		<div class="text">Gameplay may contain the following:</div>
		<div class="list">
			<div>Living in Finland</div>
			<div>Naked men</div>
			<div>Bodily fluids and censored genitalia</div>
			<div>Illegal fishing practices</div>
			<div>Gambling and actually winning</div>
			<div>Cryptids</div>
			<div>Unrealistic amounts of alcohol consumption</div>
			<div>Dealing with dysfunctional marriage</div>
			<div>Drinking and driving</div>
			<div>Drinking and fishing</div>
			<div>Drinking and ... +256</div>
		</div>
		<div class="text">HOLD the button to confirm your age.</div>
		<div class="confirm-button"
		     onmousedown="@( () => ConfirmMouseDown() )"
		     onmouseup="@( () => ConfirmMouseUp() )"
		     onmouseleave="@( () => ConfirmMouseUp() )"
		     style="background-color: @( (_holdingButton ? Color.Lerp( Color.Green, Color.Transparent, _confirmTimeOut / ConfirmHoldTime ) : Color.Black).Hex )">
			<div class="inner-border">
				[HOLD] I AM OVER 18
			</div>
		</div>
	</div>

	<div class="video-container @(_state != IntroState.Logo ? "hidden" : "")">
		@* TODO:  *@
		<VideoPanel Source="ui/intro/smallfishintro.mp4"/>
	</div>
</root>

@code {
	private enum IntroState
	{
		Logo,
		Disclaimer,
		Next
	}

	[Property] public MainMenuHud MainMenu { get; set; }
	[Property] public SoundEvent IntroSound { get; set; }

	private const float IntroTime = 4f;
	public const float ConfirmHoldTime = 1.5f;

	private IntroState _state = IntroState.Logo;
	private TimeUntil _introIsOver = IntroTime;
	private TimeUntil _confirmTimeOut;
	private bool _holdingButton;

	protected override void OnAwake()
	{
		Sound.Play( IntroSound );
	}

	protected override void OnUpdate()
	{
		switch ( _state )
		{
			case IntroState.Logo:
				if ( _introIsOver )
					_state = FileSystem.Data.FileExists( PlayerSave.FILE_PATH ) 
						? IntroState.Next
						: IntroState.Disclaimer;
				break;

			case IntroState.Disclaimer:
				if ( _holdingButton && _confirmTimeOut )
					_state = IntroState.Next;

				break;

			case IntroState.Next:
				if ( Panel != null && !Panel.IsDeleting )
				{
					MainMenu.Initialize();
					Panel.Delete();
				}

				break;

			default:
				throw new ArgumentOutOfRangeException();
		}
	}

	private void ConfirmMouseDown()
	{
		if ( _state != IntroState.Disclaimer )
			return;

		_confirmTimeOut = ConfirmHoldTime;
		_holdingButton = true;
	}

	private void ConfirmMouseUp()
	{
		if ( _state != IntroState.Disclaimer )
			return;

		_holdingButton = false;
	}

	protected override int BuildHash() => HashCode.Combine( _state, _holdingButton ? (float)_confirmTimeOut : 0f );

}
