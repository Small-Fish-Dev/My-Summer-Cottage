@using Sandbox;
@using Sandbox.UI;

@namespace Sauna
@inherits Panel

<style>
	.compass {
		position: absolute;
		width: 100%;
		top: 10px;
		justify-content: center;
		opacity: 0.75;

		.container {
			width: 600px;
			height: 60px;
			justify-content: center;
			align-items: center;
			overflow: hidden;

			.background {
				position: absolute;
				left: 0px;
				top: 15px;
				width: 100%;
				height: 30px;
				background-size: 2400px 100%;
				background-repeat: repeat-x;
				background-image: url(ui/compass.png);
				image-rendering: point;
			}

			.center {
				width: 30px;
				height: 100%;
				background-image: url(ui/compass_center.png);
				background-size: 100%;
				background-repeat: no-repeat;
				image-rendering: point;
				bottom: 8px;
			}

			.marker {
				position: absolute;
				width: 30px;
				height: 30px;
				background-color: red;
				opacity: 2;
			}
		}
	}
</style>

<root class="compass">
	<panel class="container">
		@{
			if ( Game.LocalPawn is not Player pawn )
				return;

			var yaw = pawn.ViewAngles.yaw;
			var width = 2400f * ScaleToScreen;

			<panel 
				class="background"
			   	style="background-position-x: @(-width + width * (yaw + 180f) / 360f)px">

				@foreach( var marker in Marker.All )
				{
					var angDiff = 180f + Rotation.LookAt( pawn.Position - marker.Position ).Yaw(); // Angle between player and marker.

					DebugOverlay.ScreenText( yaw.ToString(), 1);
					DebugOverlay.ScreenText( angDiff.ToString(), 3 );

					<panel class="marker" style="left: @(0)px" />
				}

			</panel>
		}	

		<panel class="center" />
	</panel>
</root>

@code {
	protected override int BuildHash()
	{
		var pawn = Game.LocalPawn as Player;
		return HashCode.Combine( pawn?.ViewAngles.yaw, pawn?.Position );
	}
}