@using Sandbox;
@using Sandbox.UI;

@namespace Sauna
@inherits Panel

<style>
	.compass {
		position: absolute;
		width: 100%;
		top: 10px;
		justify-content: center;
		opacity: 0.75;

		.container {
			width: 600px;
			height: 80px;
			justify-content: center;
			align-items: center;
			overflow: hidden;

			.background {
				position: absolute;
				left: 0px;
				top: 25px;
				width: 100%;
				height: 30px;
				background-size: 2400px 100%;
				background-repeat: repeat-x;
				background-image: url(ui/compass.png);
				image-rendering: point;
			}

			.center {
				width: 30px;
				height: 60px;
				background-image: url(ui/compass_center.png);
				background-size: 100%;
				background-repeat: no-repeat;
				image-rendering: point;
				bottom: 8px;
			}

			.marker {
				position: absolute;
				width: 30px;
				height: 30px;
				background-color: white;
				transform: translateX(-50%);
			}

			.markerName {
				position: absolute;
				top: -15px;
				opacity: 2;
				font-size: 16px;
				transform: translate(-50% -50%) scale(1);
				transition: transform 0.25s ease-in-out;
				transform-origin: center;

				&:intro {
					transform: translateX(0% 0%) scale(0);
				}

				&:outro {
					 transform: translateX(0% 0%) scale(0);
				}
			}
		}
	}
</style>

<root class="compass">
	<panel class="container" style="width: @(containerWidth)px">	
		<panel class="center" />
		
		@{
			if ( Game.LocalPawn is not Player pawn )
				return;

			var yaw = pawn.ViewAngles.yaw;
			var width = textureWidth * ScaleToScreen;

			<panel 
				class="background"
		   		style="background-position-x: @(-width + width * (yaw + 180f) / 360f)px">

				@foreach ( var marker in Marker.All )
				{
					var diff = Rotation.LookAt( marker.Position - pawn.Position ).Yaw();
					var angle = (yaw - diff) / 45f;
					var dirtyLen = containerWidth / 2f + angle * containerWidth / 2f;
					var len = dirtyLen > 0 
						? dirtyLen % textureWidth 
						: dirtyLen + textureWidth;

					<panel class="marker" style="left: @(len)px" />

					if ( len <= 340f && len >= 260f )
					{
						<label class="markerName" style="left: @(len)px; color: @(marker.Color.ToString( true, false ))">@marker.Name</label>
					}
				}

			</panel>
		}
	</panel>
</root>

@code {
	private float containerWidth => 600f;
	private float textureWidth => 2400f;

	protected override int BuildHash()
	{
		var pawn = Game.LocalPawn as Player;
		return HashCode.Combine( pawn?.ViewAngles.yaw, pawn?.Position );
	}
}