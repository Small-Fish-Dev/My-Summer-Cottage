@namespace Sauna.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	<text class="title-container">TASKS DETAILS</text>
	@if (SelectedTask is not null)
	{
		<div style="width: 100%; padding: 40px;">
			<div style="width: 75%; flex-direction: column;">
				<div style="align-items: flex-start;">
					<text class="title">@SelectedTask.Name</text>
					@if (SelectedTask.Completed)
					{
						@if (SelectedTask.Successful)
						{
							<div class="success completed">COMPLETED</div>
						}
						else
						{
							<div class="success failed">FAILED</div>
						}
                    }
                    @if (SelectedTask.TimeLimited && !SelectedTask.TaskTimer )
                    {
                        <div class="success failed">@(MathF.Round( SelectedTask.TimeLimitInSeconds - SelectedTask.TaskTimer.Passed )) seconds left...</div>
                    }
				</div>
				<text class="subtitle">@SelectedTask.Subtitle</text>
				@if (SelectedTask == Player.PinnedTask)
				{
					<div class="pinned">( PINNED )</div>
				}
			</div>
		</div>
		<div class="task-additional-details">
			<div style="flex-direction: column; margin-bottom: 40px; flex-shrink: 0;">
				<text class="title">Task Details:</text>
				<text style="font-size: 20px;">@SelectedTask.Description </text>
			</div>
			<div style="flex-direction: column; flex-shrink: 0;">
				<text class="title">Task Requirements:</text>
				<div style="flex-direction: column; flex-shrink: 0; gap: 20px;">
					@foreach (var subtask in SelectedTask.Subtasks)
					{
						<div class="requirement">
							<Checkbox Interactable=@false Enabled=@subtask.Completed />
							<text class="requirement-details">@subtask.Description (@subtask.CurrentAmount/@subtask.AmountToComplete)</text>
						</div>
					}
				</div>
			</div>
		</div>
		<div class="pin-details" onclick=@(() => Player.PinnedTask = Player.PinnedTask == SelectedTask ? null : SelectedTask)>
			<img src="ui/hud/task_pin.png" />
			<text>Pin this task to top right corner</text>
			<Checkbox Enabled=@(SelectedTask == Player.PinnedTask) />
		</div>
	}
	else
	{
		<div class="empty">
			<img src="ui/hud/box_question.png" />
			<div class="details">
				<text class="header">No task selected</text>
				<text class="description">Click on any task from the left bar to see it's details.</text>
			</div>
		</div>
	}
</root>

@code {
	public SaunaTask SelectedTask { get; set; }

	protected override int BuildHash()
	{
		if (SelectedTask is null)
			return -1;

		return HashCode.Combine(
			SelectedTask.ResourceId,
			SelectedTask.Completed,
            SelectedTask.Successful,
            SelectedTask.Subtasks.HashCombine((subtask) => HashCode.Combine(subtask.CurrentAmount)),
            SelectedTask.TaskTimer.Passed,
			SelectedTask.Subtasks.HashCombine((subtask) => HashCode.Combine(subtask.Completed))
		);
	}
}
