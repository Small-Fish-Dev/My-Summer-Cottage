@namespace Sauna.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	<div class="main">
		@if (Pinned is null)
		{

		}
		else
		{
			<div class="icon"></div>
			<div class="text-container">
				<div style="flex-direction: row-reverse">
					<div class="task-type @(Pinned.IsPrimaryTask ? "primary" : "secondary")">
						@(Pinned.IsPrimaryTask ? "PRIMARY TASK" : "SECONDARY TASK")
					</div>
				</div>

				<div style="flex-direction: row-reverse">
					<div class="task-title">
						@Pinned.Name
					</div>
				</div>

                <div style="flex-direction: row-reverse; gap: 8px;">
                    @if (Pinned.TimeLimited && !Pinned.TaskTimer)
                    {
                        <div class="task-timer">@(MathF.Round(Pinned.TimeLimitInSeconds - Pinned.TaskTimer.Passed)) seconds left...</div>
                    }
                </div>

				<div style="flex-direction: row-reverse; gap: 8px;">
					@if (Pinned.Completed)
					{
						@if (Pinned.Successful)
						{
							<div class="task-description completed">COMPLETED</div>
						}
						else
						{
							<div class="task-description failed">FAILED</div>
                        }
					}
					else
                    {
						@if (Pinned.NextSubtaskToComplete is not null)
						{
                            <div class="task-description">@Pinned.NextSubtaskToComplete.Description (@Pinned.NextSubtaskToComplete.CurrentAmount/@Pinned.NextSubtaskToComplete.AmountToComplete)</div>
							<Checkbox Enabled=@(Pinned.NextSubtaskToComplete.Completed) />
                        }
                    }
				</div>
			</div>
		}
	</div>
</root>

@code {
	public static SaunaTask Pinned { get; set; }

	public PrimaryTask()
	{
		// s&box doesn't reset statics between launches of the game, if we have pinned a task
		// that is no longer active, remove it. 
		if (Pinned is not null && !TaskMaster.ActiveTasks.Contains(Pinned))
			Pinned = null;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine
		( 
			Pinned?.ResourceId, 
			Pinned?.Completed,
			Pinned?.Successful,
            Pinned?.NextSubtaskToComplete?.Completed,
            Pinned?.NextSubtaskToComplete?.CurrentAmount,
            Pinned?.TaskTimer.Passed,
			Pinned?.NextSubtaskToComplete?.GetHashCode()
		);
	}
}
