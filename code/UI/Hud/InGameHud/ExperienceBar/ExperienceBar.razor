@namespace Sauna.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	<div @ref=_container class="container @(_timeUntilHidden ? "inactive" : "")">
		<div class="level-details">
			<text class="level">Lv. @Player.Local.Level</text>
			<text class="level-exp">@($"{Player.Local.Experience} / {Player.Local.ExpPerLevel} XP")</text>
		</div>
		<div class="exp-bar">
			<div class="progress" style="width: @( 100f * Player.Local.Experience / Player.Local.ExpPerLevel )%"/>
		</div>
	</div>
</root>


@code
{
	private static ExperienceBar _instance;
	private Panel _container;
	private const float TIME_ON_SCREEN = 3;
	private TimeUntil _timeUntilHidden;

	public ExperienceBar()
	{
		_instance = this;
	}

	public static void OnExperienceEarned( int delta )
	{
		_instance._timeUntilHidden = TIME_ON_SCREEN;
		var popupExp = new PopupText($"+{delta} XP");
		popupExp.Style.Right = Length.Pixels(0);
		popupExp.Style.Bottom = Length.Pixels(90);
		_instance._container.AddChild(popupExp);
	}

	public static void OnLevelUp( int newLevel )
	{
		_instance._timeUntilHidden = TIME_ON_SCREEN;
		var popupLvl = new PopupText($"+{newLevel} LVL");
		popupLvl.Style.Left = Length.Pixels(0);
		popupLvl.Style.Bottom = Length.Pixels(90);
		_instance._container.AddChild(popupLvl);
	}

	protected override int BuildHash()
	{
		return HashCode.Combine( Player.Local.Experience, Player.Local.ExpPerLevel, (bool)_timeUntilHidden );
	}
}
