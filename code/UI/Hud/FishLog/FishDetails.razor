@namespace Sauna.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	@if (_displayedFishInfo is null)
	{
		<div class="header" style="padding: 70px;">
			<img src="/ui/hud/phish_unknown.png" style="image-rendering: pixelated;" />
			<div style="flex-direction: column;">
				<text class="title">Fishing Statistics</text>
				<text class="subtitle">
					Here is some information regarding your fishing adventures! 
					You can click on fish you've caught to view additional details.
					If you don't have any fish unlocked, find a rod and get fishing!
				</text>
			</div>
		</div>
	}
	else
	{
		<div class="header">
			<img src=@_displayedFishInfo.Icon.ResourcePath style="width: 30%; aspect-ratio: 1; margin: 20px;"  />
			<div style="flex-direction: column; width: 70%;">
				<text class="title">@_displayedFishInfo.Name</text>
				<div class="fish-stars" style="margin-bottom: 10px;">
					@{
						var stars = (int)Math.Max( _displayedFishInfo.Rarity * StarCount, 1 );
						for ( var i = 0; i < stars; i++ )
						{
							<img src="ui/hud/fish_rarity.png"/>
						}
						for ( var i = stars; i < StarCount; i++ )
						{
							<img src="ui/hud/fish_rarity_empty.png"/>
						}
					}
				</div>
				<div class="subtitle">@_displayedFishInfo.Description</div>
			</div>
		</div>
		@if (_selectedFishRecord is not null)
		{
			<div class="description">
				<div class="record">
					<text class="key">Total @_displayedFishInfo.Name caught:</text>
					<text class="value">@_selectedFishRecord.Count</text>
				</div>
				<div style="height: 20px;" />
				<text class="best-catch">BEST CATCH</text>
				<div class="record">
					<text class="key">Caught on:</text>
					<text class="value">@_selectedFishRecord.MaxWhen.ToLongDateString()</text>
				</div>
				<div class="record">
					<text class="key">Record weight:</text>
					<text class="value weight">@_selectedFishRecord.MaxWeight.ToKilograms() kg</text>
				</div>
				<div class="record">
					<text class="key">Record price:</text>
					<text class="value money">@((int)(_selectedFishRecord.MaxWeight / 1000.0f * _displayedFishInfo.CostPerKilo))mk</text>
				</div>
			</div>
		}
	}
</root>

@code {
	public FishLog.FishInfo SelectedFishInfo { get; set; }
	private FishLog.FishInfo _displayedFishInfo { get; set; }
	private FishRecord _selectedFishRecord;

	private const int StarCount = 5;

	public override void Tick()
	{
		if (SelectedFishInfo is not null)
			SelectFish(SelectedFishInfo);
	}

	private void SelectFish( FishLog.FishInfo fish )
	{
		if (_displayedFishInfo is not null && _displayedFishInfo.Name == fish.Name)
			return;

		_displayedFishInfo = fish;

		if ( Player.Local.FishesCaught.TryGetValue( fish.PrefabPath, out var record ) )
			_selectedFishRecord = record;
		else
			_selectedFishRecord = null;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(_displayedFishInfo?.GetHashCode());
	}
}
