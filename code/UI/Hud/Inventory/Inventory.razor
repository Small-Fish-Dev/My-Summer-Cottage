@namespace Sauna.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	<SideButton 
		Title="Pause Menu" 
		Subtitle="Press Escape or click here"
		OnClick=@(() => FullScreenManager.Instance.Display(FullScreenManager.ActivePanel.PauseMenu))
		ImagePath="ui/hud/goback.png"
		style="position: absolute; top: 50px; left: 0px;" 
	/>
	<SideButton 
		Title="Tasks" 
		Subtitle="Press @(Input.GetButtonOrigin( InputAction.Tasks )) or click here"
		OnClick=@(() => FullScreenManager.Instance.Display(FullScreenManager.ActivePanel.TaskLog))
		ImagePath="ui/hud/task_completed.png"
		IsInverted=@(true)
		style="position: absolute; top: 50px; right: 0px;" 
	/>
	<div class="section" style="flex-direction: row; align-items: center; justify-content: flex-end;">
		<div style="flex-direction: column; flex-shrink: 0; align-items: flex-end;">
			<InventorySlot EquipSlotIndex=@EquipSlot.Head Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Head]/>
			<InventorySlot EquipSlotIndex=@EquipSlot.Face Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Face]/>
			<div>
				<InventorySlot EquipSlotIndex=@EquipSlot.Hand Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Hand]/>
				<InventorySlot EquipSlotIndex=@EquipSlot.Body Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Body]/>
			</div>
			<InventorySlot EquipSlotIndex=@EquipSlot.Legs Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Legs]/>
			<InventorySlot EquipSlotIndex=@EquipSlot.Feet Item=@Player.Local.Inventory.EquippedItems[(int)EquipSlot.Feet]/>
		</div>
		<CharacterRenderer/>
	</div>
	<div class="section" style="width: 45%;">
		<text class="title">INVENTORY</text>
		<div class="items">
			@for ( var index = 0; index < Player.Local.Inventory.BackpackItems.Count; index++ )
			{
				var item = Player.Local.Inventory.BackpackItems[index];
				<InventorySlot Item=@item BackpackSlotIndex=@index />
			}
		</div>
		<div style="align-items: center; margin: 20px 0px;">
			<img src="/ui/hud/weight.png" style="width: 40px; height: 40px; margin-right: 20px;"/>
			<div style="font-size: 30px; gap: 10px;">
				<text>TOTAL WEIGHT: </text>
				<text class="active-weight">@Player.Local.Inventory.GetTotalWeightInGrams().ToKilograms() kg</text>
				<text class="max">/ @Sauna.Inventory.MAX_WEIGHT_IN_GRAMS.ToKilograms() kg</text>
			</div>
		</div>
		<div style="flex-direction: column;">
			<div style="margin: 30px 0px 0px 0px; align-items: flex-end; justify-content: space-between;">
				<div style="align-items: center;">
					<img src="/ui/hud/current_level.png" style="width: 50px; height: 50px; margin-right: 20px;"/>
					<text class="level">Lv. 7</text>
				</div>
				<div class="exp-text">
					<text>472</text>
					<text>/</text>
					<text>1020 XP</text>
				</div>
			</div>
			<div class="exp-bar">
				<div class="progress" style="width: @( 10 )%"/>
			</div>
		</div>
	</div>
</root>

@code {
	public static Inventory Instance { get; private set; }

	public Inventory() => Instance = this;

	// We want the inspect menu to be apart of the inventory so both close.
	public void Inspect( ItemComponent item )
	{
		if ( item is not null )
			AddChild( new InspectItem( item ) );
	}

	private void DropItem( ItemComponent item ) 
	{
		if ( item is not null )
			Player.Local.Inventory.DropItem( item );
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(
			Player.Local.Inventory.BackpackItems.HashCombine( i => i?.GetHashCode() ?? -1 ),
			Player.Local.Inventory.EquippedItems.HashCombine( i => i?.GetHashCode() ?? -1 )
		);
	}

}
