@using Sandbox;
@using Sandbox.UI;

@namespace Sauna
@inherits Panel

<style>
	Effects {
		position: absolute;
		top: 25px;
		right: 25px;
		flex-direction: column;
		justify-content: flex-end;

		.effect {
			flex-direction: column;
			padding-bottom: 10px;
			transition: transform 0.2s ease-in-out;
			transform: scale(1);
			font-size: 16px;

			.row {
				flex-direction: row;
				justify-content: flex-end;
				flex-wrap: wrap;

				.padding {
					padding-right: 5px;
				}
			}

			&:intro {
				transform: scale(0);
			}

			&:outro {
				transform: scale(0);
			}
		}
	}
</style>

<root>
	@foreach ( var effect in All )
	{
		if ( effect.Duration < 0 )
			continue;

		<panel class="effect">
			<panel class="row">
				@if ( effect.MaxStacks > 1 )
				{
					<label class="padding" style="color: orange;">@(effect.Stacks)x</label>
				}

				<label>@effect.Text</label>
			</panel>

			@if ( !effect.Permanent )
			{
				<panel class="row">
					<label style="color: rgb(190, 190, 190);">@($"{effect.Duration:F1}")s</label>
				</panel>
			}
		</panel>
	}
</root>

@code {
	/// <summary>
	/// All the effects currently on the player.
	/// </summary>
	public IEnumerable<BaseEffect>? All 
		=> (Game.LocalPawn as Player)?.Effects.All;

	protected override int BuildHash()
	{
		// A little unoptimized way of doing this but we'll keep it like this for now.
		return HashCode.Combine( String.Join( ',', All.Select( e => e.Duration ) ) );		
	}
}
