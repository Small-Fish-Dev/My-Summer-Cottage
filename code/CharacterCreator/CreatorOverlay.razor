@using Sandbox;
@using Sauna.UI;
@using Sandbox.UI;

@namespace Sauna
@inherits PanelComponent
@attribute [StyleSheet]

<root>
	@* Header *@
	<div class="header-content">
		@if( CreatorComponent.Current != CreatorStage.Confirmation )
		{
			<div class="title">Character Creation</div>
			<div class="stage">Stage @stageInteger - @(CreatorComponent.Current.ToString().Replace( '_', ' ' ))</div>

			<div class="stage-counter">
				@for ( int i = 0; i < 3; i++ )
				{
					<div class="box">
						@if ( stageInteger >= i + 1 )
						{
							<div class="fill" />
						}
					</div>

					if ( i < 2 )
					{
						<div class="spacer" />
					}
				}
			</div>
		}
		else
		{
			<div class="title">Confirm this Character?</div>
		}
	</div>

	@if( stageInteger > 1)
	{
		<SideButton 
			Title="Go back" 
			Subtitle="to stage @(stageInteger  - 1)"
			OnClick=@CreatorComponent.PreviousStage
			style="left: 0px; top: 40px;"
		/>
	}

	@* Other related UI element. *@
	@switch( CreatorComponent.Current )
	{
		case CreatorStage.Identification:
			<SideButton 
				Title="Continue" 
				Subtitle="Use the enter key to swap between the fields."
				ImagePath="ui/hud/confirm.png"
				OnClick=@CreatorComponent.NextStage
				IsDisabled=@disabled
				IsInverted=@true
				style="right: 0px; bottom: 50px;"
			/>

			break;

		case CreatorStage.Appearance:
			<TabletPanel />

			break;

		case CreatorStage.Dressing_up:
			<ClothingPanel />

			break;
	}
</root>

@code {
	private int stageInteger => (int)CreatorComponent.Current + 1;
	
	private bool disabled => 
		string.IsNullOrEmpty( PassportComponent.Firstname ) 
	 || string.IsNullOrEmpty( PassportComponent.Lastname );

	protected override int BuildHash()
	{
		return HashCode.Combine( stageInteger, disabled );
	}
}
