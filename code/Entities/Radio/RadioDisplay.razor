@using Sandbox;
@using Sandbox.UI;

@namespace Sauna
@inherits WorldPanel

@attribute [StyleSheet( "/Entities/Radio/RadioDisplay.scss" )]

<root style="background-color: darken(#5E7C34, @(Radio.CurrentSong != null ? 0.7 : 0.9));">
	@if( Radio.CurrentSong != null )
	{
		var song = Radio.CurrentSong.Value;

		<label class="text">
			@($"{song.Producer.ToUpper()} - {song.Name.ToUpper()}")
		</label>

		<panel class="timeline">
			<panel class="inner" @ref=timeline />
		</panel>
	}
</root>

@code {
	public Radio Radio { get; private set; }

	private Panel timeline { get; set; }

	public RadioDisplay( Radio radio )
	{
		Radio = radio;

		var size = new Vector2( 104f, 25f );
		Scale = 0.5f;
		PanelBounds = new( -size.x / 2f, -size.y / 2f, size.x, size.y );
	}

	[Event.Client.Frame]
	private void frame()
	{
		if ( Radio == null || !Radio.IsValid )
		{
			Delete( true );
			return;
		}

		var attachment = Radio.GetAttachment( "screen" );
		if ( attachment == null )
			return;

		var transform = attachment.Value;
		Position = transform.Position + transform.Rotation.Forward * 0.1f;
		Rotation = transform.Rotation;
		
		if ( Radio.CurrentSong != null && Radio.ElapsedTime != null )
			timeline.Style.Width = Length.Fraction( Radio.ElapsedTime.Value / Radio.CurrentSong.Value.Duration );
	}

	protected override int BuildHash()
	{
		return HashCode.Combine( Radio?.CurrentSong?.Path );
	}
}