@using Sandbox;
@using Sandbox.UI;

@namespace Sauna
@inherits WorldPanel

<style>
	RadioDisplay {
		position: absolute;
		width: 100%;
		height: 100%;
		flex-direction: column;
		flex-wrap: wrap;
		
		.text {
			top: 2px;
			text-overflow:clip;
			font-size: 24px;
			color: darken(#5E7C34, 0.95);
			font-family: DS-DIGIB;
			max-height: 50%;
			text-shadow: 0px 2px 0px rgba(black, 0.95);
		}
	}
</style>

<root style="background-color: darken(#5E7C34, @(Radio.CurrentSong != null ? 0.7 : 0.9));">
	@if( Radio.CurrentSong != null )
	{
		var song = Radio.CurrentSong.Value;

		<label class="text">@song.Producer.ToUpper()</label>
		<label class="text">@song.Name.ToUpper()</label>
	}
</root>

@code {
	public Radio Radio { get; private set; }

	public RadioDisplay( Radio radio )
	{
		Radio = radio;

		var size = new Vector2( 102f, 25f );
		Scale = 0.5f;
		PanelBounds = new( -size.x / 2f, -size.y / 2f, size.x, size.y );
	}

	[Event.Client.Frame]
	void frame()
	{
		if ( Radio == null || !Radio.IsValid )
		{
			Delete( true );
			return;
		}

		var attachment = Radio.GetAttachment( "screen" );
		if ( attachment == null )
			return;

		var transform = attachment.Value;
		Position = transform.Position + transform.Rotation.Forward * 0.1f;
		Rotation = transform.Rotation;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine( Radio?.CurrentSong?.Path );
	}
}